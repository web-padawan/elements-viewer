{"schema_version":"1.0.0","namespaces":[{"name":"Vaadin","description":"","summary":"","sourceRange":{"file":"src/vaadin-checkbox.html","start":{"line":326,"column":6},"end":{"line":326,"column":54}},"elements":[{"description":"`<vaadin-checkbox>` is a Web Component for customized checkboxes.\n\n```html\n<vaadin-checkbox>\n  Make my profile visible\n</vaadin-checkbox>\n```\n\n### Styling\n\nThe following shadow DOM parts are available for styling:\n\nPart name         | Description\n------------------|----------------\n`checkbox`        | The checkbox element\n`label`           | The label content element\n\nThe following state attributes are available for styling:\n\nAttribute    | Description | Part name\n-------------|-------------|--------------\n`active`     | Set when the checkbox is pressed down, either with mouse, touch or the keyboard. | `:host`\n`disabled`   | Set when the checkbox is disabled. | `:host`\n`focus-ring` | Set when the checkbox is focused using the keyboard. | `:host`\n`focused`    | Set when the checkbox is focused. | `:host`\n`indeterminate` | Set when the checkbox is in indeterminate mode. | `:host`\n`checked` | Set when the checkbox is checked. | `:host`\n`empty` | Set when there is no label provided. | `label`\n\nSee [ThemableMixin â€“ how to apply styles for shadow parts](https://github.com/vaadin/vaadin-themable-mixin/wiki)","summary":"","path":"src/vaadin-checkbox.html","properties":[{"name":"focusElement","type":"?","description":"","privacy":"protected","sourceRange":{"start":{"line":269,"column":8},"end":{"line":271,"column":9}},"metadata":{"polymer":{"readOnly":true}}},{"name":"autofocus","type":"boolean | null | undefined","description":"Specify that this control should have input focus when the page loads.","privacy":"public","sourceRange":{"file":"../../vaadin-control-state-mixin/vaadin-control-state-mixin.html","start":{"line":55,"column":8},"end":{"line":57,"column":9}},"metadata":{"polymer":{"attributeType":"Boolean"}},"inheritedFrom":"Vaadin.ControlStateMixin"},{"name":"_previousTabIndex","type":"number | null | undefined","description":"Stores the previous value of tabindex attribute of the disabled element","privacy":"protected","sourceRange":{"file":"../../vaadin-control-state-mixin/vaadin-control-state-mixin.html","start":{"line":62,"column":8},"end":{"line":64,"column":9}},"metadata":{"polymer":{"attributeType":"Number"}},"inheritedFrom":"Vaadin.ControlStateMixin"},{"name":"disabled","type":"boolean | null | undefined","description":"If true, the user cannot interact with this element.","privacy":"public","sourceRange":{"file":"../../vaadin-control-state-mixin/vaadin-control-state-mixin.html","start":{"line":69,"column":8},"end":{"line":73,"column":9}},"metadata":{"polymer":{"observer":"\"_disabledChanged\"","attributeType":"Boolean"}},"inheritedFrom":"Vaadin.ControlStateMixin"},{"name":"_isShiftTabbing","type":"boolean | null | undefined","description":"","privacy":"protected","sourceRange":{"file":"../../vaadin-control-state-mixin/vaadin-control-state-mixin.html","start":{"line":75,"column":8},"end":{"line":77,"column":9}},"metadata":{"polymer":{"attributeType":"Boolean"}},"inheritedFrom":"Vaadin.ControlStateMixin"},{"name":"name","type":"?","description":"","privacy":"public","sourceRange":{"start":{"line":171,"column":8},"end":{"line":173,"column":9}},"metadata":{"polymer":{"readOnly":false}}},{"name":"checked","type":"boolean | null | undefined","description":"True if the checkbox is checked.","privacy":"public","sourceRange":{"start":{"line":128,"column":12},"end":{"line":134,"column":13}},"metadata":{"polymer":{"notify":true,"observer":"\"_checkedChanged\"","attributeType":"Boolean"}},"defaultValue":"false"},{"name":"indeterminate","type":"boolean | null | undefined","description":"Indeterminate state of the checkbox when it's neither checked nor unchecked, but undetermined.\nhttps://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/checkbox#Indeterminate_state_checkboxes","privacy":"public","sourceRange":{"start":{"line":140,"column":12},"end":{"line":146,"column":13}},"metadata":{"polymer":{"notify":true,"observer":"\"_indeterminateChanged\"","attributeType":"Boolean"}},"defaultValue":"false"},{"name":"value","type":"string | null | undefined","description":"The value given to the data submitted with the checkbox's name to the server when the control is inside a form.","privacy":"public","sourceRange":{"start":{"line":151,"column":12},"end":{"line":154,"column":13}},"metadata":{"polymer":{"attributeType":"String"}},"defaultValue":"\"on\""},{"name":"_nativeCheckbox","type":"Object | null | undefined","description":"","privacy":"protected","sourceRange":{"start":{"line":156,"column":12},"end":{"line":158,"column":13}},"metadata":{"polymer":{"attributeType":"Object"}}}],"methods":[{"name":"ready","description":"","privacy":"protected","sourceRange":{"start":{"line":179,"column":8},"end":{"line":199,"column":9}},"metadata":{},"params":[],"return":{"type":"void"}},{"name":"connectedCallback","description":"","privacy":"protected","sourceRange":{"file":"../../vaadin-control-state-mixin/vaadin-control-state-mixin.html","start":{"line":160,"column":4},"end":{"line":165,"column":5}},"metadata":{},"params":[],"return":{"type":"void"},"inheritedFrom":"Vaadin.ControlStateMixin"},{"name":"disconnectedCallback","description":"","privacy":"protected","sourceRange":{"file":"../../vaadin-control-state-mixin/vaadin-control-state-mixin.html","start":{"line":170,"column":4},"end":{"line":181,"column":5}},"metadata":{},"params":[],"return":{"type":"void"},"inheritedFrom":"Vaadin.ControlStateMixin"},{"name":"_setFocused","description":"","privacy":"protected","sourceRange":{"file":"../../vaadin-control-state-mixin/vaadin-control-state-mixin.html","start":{"line":183,"column":4},"end":{"line":197,"column":5}},"metadata":{},"params":[{"name":"focused"}],"return":{"type":"void"},"inheritedFrom":"Vaadin.ControlStateMixin"},{"name":"_bodyKeydownListener","description":"","privacy":"protected","sourceRange":{"file":"../../vaadin-control-state-mixin/vaadin-control-state-mixin.html","start":{"line":199,"column":4},"end":{"line":201,"column":5}},"metadata":{},"params":[{"name":"e"}],"return":{"type":"void"},"inheritedFrom":"Vaadin.ControlStateMixin"},{"name":"_bodyKeyupListener","description":"","privacy":"protected","sourceRange":{"file":"../../vaadin-control-state-mixin/vaadin-control-state-mixin.html","start":{"line":203,"column":4},"end":{"line":205,"column":5}},"metadata":{},"params":[],"return":{"type":"void"},"inheritedFrom":"Vaadin.ControlStateMixin"},{"name":"_focus","description":"","privacy":"protected","sourceRange":{"file":"../../vaadin-control-state-mixin/vaadin-control-state-mixin.html","start":{"line":216,"column":4},"end":{"line":223,"column":5}},"metadata":{},"params":[{"name":"e"}],"return":{"type":"void"},"inheritedFrom":"Vaadin.ControlStateMixin"},{"name":"focus","description":"Moving the focus from the host element causes firing of the blur event what leads to problems in IE.","privacy":"private","sourceRange":{"file":"../../vaadin-control-state-mixin/vaadin-control-state-mixin.html","start":{"line":229,"column":4},"end":{"line":236,"column":5}},"metadata":{},"params":[],"return":{"type":"void"},"inheritedFrom":"Vaadin.ControlStateMixin"},{"name":"blur","description":"Native bluring in the host element does nothing because it does not have the focus.\nIn chrome it works, but not in FF.","privacy":"private","sourceRange":{"file":"../../vaadin-control-state-mixin/vaadin-control-state-mixin.html","start":{"line":243,"column":4},"end":{"line":246,"column":5}},"metadata":{},"params":[],"return":{"type":"void"},"inheritedFrom":"Vaadin.ControlStateMixin"},{"name":"_disabledChanged","description":"","privacy":"protected","sourceRange":{"file":"../../vaadin-control-state-mixin/vaadin-control-state-mixin.html","start":{"line":248,"column":4},"end":{"line":261,"column":5}},"metadata":{},"params":[{"name":"disabled"}],"return":{"type":"void"},"inheritedFrom":"Vaadin.ControlStateMixin"},{"name":"_tabindexChanged","description":"","privacy":"protected","sourceRange":{"file":"../../vaadin-control-state-mixin/vaadin-control-state-mixin.html","start":{"line":263,"column":4},"end":{"line":279,"column":5}},"metadata":{},"params":[{"name":"tabindex"}],"return":{"type":"void"},"inheritedFrom":"Vaadin.ControlStateMixin"},{"name":"click","description":"","privacy":"protected","sourceRange":{"file":"../../vaadin-control-state-mixin/vaadin-control-state-mixin.html","start":{"line":284,"column":4},"end":{"line":288,"column":5}},"metadata":{},"params":[],"return":{"type":"void"},"inheritedFrom":"Vaadin.ControlStateMixin"},{"name":"_addEventListenerToNode","description":"Add the event listener to the node if it is a gestures event.","privacy":"protected","sourceRange":{"file":"../../polymer/lib/mixins/gesture-event-listeners.html","start":{"line":55,"column":6},"end":{"line":59,"column":7}},"metadata":{},"params":[{"name":"node","type":"!Node","description":"Node to add event listener to"},{"name":"eventName","type":"string","description":"Name of event"},{"name":"handler","type":"function (!Event): void","description":"Listener function to add"}],"return":{"type":"void"},"inheritedFrom":"Polymer.GestureEventListeners"},{"name":"_removeEventListenerFromNode","description":"Remove the event listener to the node if it is a gestures event.","privacy":"protected","sourceRange":{"file":"../../polymer/lib/mixins/gesture-event-listeners.html","start":{"line":69,"column":6},"end":{"line":73,"column":7}},"metadata":{},"params":[{"name":"node","type":"!Node","description":"Node to remove event listener from"},{"name":"eventName","type":"string","description":"Name of event"},{"name":"handler","type":"function (!Event): void","description":"Listener function to remove"}],"return":{"type":"void"},"inheritedFrom":"Polymer.GestureEventListeners"},{"name":"_updateLabelAttribute","description":"","privacy":"protected","sourceRange":{"start":{"line":201,"column":8},"end":{"line":209,"column":9}},"metadata":{},"params":[],"return":{"type":"void"}},{"name":"_isAssignedNodesEmpty","description":"","privacy":"protected","sourceRange":{"start":{"line":211,"column":8},"end":{"line":217,"column":9}},"metadata":{},"params":[{"name":"nodes"}]},{"name":"_checkedChanged","description":"","privacy":"protected","sourceRange":{"start":{"line":219,"column":8},"end":{"line":225,"column":9}},"metadata":{},"params":[{"name":"checked"}],"return":{"type":"void"}},{"name":"_indeterminateChanged","description":"","privacy":"protected","sourceRange":{"start":{"line":227,"column":8},"end":{"line":233,"column":9}},"metadata":{},"params":[{"name":"indeterminate"}],"return":{"type":"void"}},{"name":"_addActiveListeners","description":"","privacy":"protected","sourceRange":{"start":{"line":235,"column":8},"end":{"line":266,"column":9}},"metadata":{},"params":[],"return":{"type":"void"}},{"name":"__interactionsAllowed","description":"True if users' interactions (mouse or keyboard)\nshould toggle the checkbox","privacy":"private","sourceRange":{"start":{"line":277,"column":8},"end":{"line":288,"column":9}},"metadata":{},"params":[{"name":"e"}]},{"name":"_handleClick","description":"","privacy":"protected","sourceRange":{"start":{"line":290,"column":8},"end":{"line":307,"column":9}},"metadata":{},"params":[{"name":"e"}],"return":{"type":"void"}},{"name":"_toggleChecked","description":"","privacy":"protected","sourceRange":{"start":{"line":309,"column":8},"end":{"line":312,"column":9}},"metadata":{},"params":[],"return":{"type":"void"}}],"staticMethods":[{"name":"_finalizeClass","description":"","privacy":"protected","sourceRange":{"file":"../../vaadin-element-mixin/vaadin-element-mixin.html","start":{"line":31,"column":2},"end":{"line":47,"column":3}},"metadata":{},"params":[],"return":{"type":"void"},"inheritedFrom":"Vaadin.ElementMixin"},{"name":"finalize","description":"","privacy":"protected","sourceRange":{"file":"../../vaadin-themable-mixin/vaadin-themable-mixin.html","start":{"line":16,"column":4},"end":{"line":31,"column":5}},"metadata":{},"params":[],"return":{"type":"void"},"inheritedFrom":"Vaadin.ThemableMixin"},{"name":"_includeMatchingThemes","description":"","privacy":"protected","sourceRange":{"file":"../../vaadin-themable-mixin/vaadin-themable-mixin.html","start":{"line":34,"column":4},"end":{"line":79,"column":5}},"metadata":{},"params":[{"name":"template"}],"return":{"type":"void"},"inheritedFrom":"Vaadin.ThemableMixin"},{"name":"_includeStyle","description":"","privacy":"private","sourceRange":{"file":"../../vaadin-themable-mixin/vaadin-themable-mixin.html","start":{"line":82,"column":4},"end":{"line":88,"column":5}},"metadata":{},"params":[{"name":"moduleName"},{"name":"template"}],"return":{"type":"void"},"inheritedFrom":"Vaadin.ThemableMixin"}],"demos":[{"url":"demo/index.html","description":""}],"metadata":{},"sourceRange":{"start":{"line":109,"column":6},"end":{"line":319,"column":7}},"privacy":"public","superclass":"HTMLElement","name":"Vaadin.CheckboxElement","attributes":[{"name":"autofocus","description":"Specify that this control should have input focus when the page loads.","sourceRange":{"file":"../../vaadin-control-state-mixin/vaadin-control-state-mixin.html","start":{"line":55,"column":8},"end":{"line":57,"column":9}},"metadata":{},"type":"boolean | null | undefined","inheritedFrom":"Vaadin.ControlStateMixin"},{"name":"disabled","description":"If true, the user cannot interact with this element.","sourceRange":{"file":"../../vaadin-control-state-mixin/vaadin-control-state-mixin.html","start":{"line":69,"column":8},"end":{"line":73,"column":9}},"metadata":{},"type":"boolean | null | undefined","inheritedFrom":"Vaadin.ControlStateMixin"},{"name":"checked","description":"True if the checkbox is checked.","sourceRange":{"start":{"line":128,"column":12},"end":{"line":134,"column":13}},"metadata":{},"type":"boolean | null | undefined"},{"name":"indeterminate","description":"Indeterminate state of the checkbox when it's neither checked nor unchecked, but undetermined.\nhttps://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/checkbox#Indeterminate_state_checkboxes","sourceRange":{"start":{"line":140,"column":12},"end":{"line":146,"column":13}},"metadata":{},"type":"boolean | null | undefined"},{"name":"value","description":"The value given to the data submitted with the checkbox's name to the server when the control is inside a form.","sourceRange":{"start":{"line":151,"column":12},"end":{"line":154,"column":13}},"metadata":{},"type":"string | null | undefined"}],"events":[{"type":"CustomEvent","name":"change","description":"Fired when the user commits a value change.","metadata":{}},{"type":"CustomEvent","name":"checked-changed","description":"Fired when the `checked` property changes.","metadata":{}},{"type":"CustomEvent","name":"indeterminate-changed","description":"Fired when the `indeterminate` property changes.","metadata":{}}],"styling":{"cssVariables":[],"selectors":[]},"slots":[{"description":"","name":"","range":{"start":{"line":63,"column":8},"end":{"line":63,"column":21}}}],"tagname":"vaadin-checkbox","mixins":["Vaadin.ElementMixin","Vaadin.ControlStateMixin","Vaadin.ThemableMixin","Polymer.GestureEventListeners"]}]}]}