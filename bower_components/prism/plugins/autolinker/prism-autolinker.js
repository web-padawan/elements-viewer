(function(){if("undefined"!==typeof self&&!self.Prism||"undefined"!==typeof global&&!global.Prism){return}var url=/\b([a-z]{3,7}:\/\/|tel:)[\w\-+%~/.:=&]+(?:\?[\w\-+%~/.:#=?&!$'()*,;]*)?(?:#[\w\-+%~/.:#=?&!$'()*,;]*)?/,email=/\b\S+@[\w.]+[a-z]{2}/,linkMd=/\[([^\]]+)]\(([^)]+)\)/,// Tokens that may contain URLs and emails
candidates=["comment","url","attr-value","string"];Prism.plugins.autolinker={processGrammar:function(grammar){// Abort if grammar has already been processed
if(!grammar||grammar["url-link"]){return}Prism.languages.DFS(grammar,function(key,def,type){if(-1<candidates.indexOf(type)&&!Array.isArray(def)){if(!def.pattern){def=this[key]={pattern:def}}def.inside=def.inside||{};if("comment"==type){def.inside["md-link"]=linkMd}if("attr-value"==type){Prism.languages.insertBefore("inside","punctuation",{"url-link":url},def)}else{def.inside["url-link"]=url}def.inside["email-link"]=email}});grammar["url-link"]=url;grammar["email-link"]=email}};Prism.hooks.add("before-highlight",function(env){Prism.plugins.autolinker.processGrammar(env.grammar)});Prism.hooks.add("wrap",function(env){if(/-link$/.test(env.type)){env.tag="a";var href=env.content;if("email-link"==env.type&&0!=href.indexOf("mailto:")){href="mailto:"+href}else if("md-link"==env.type){// Markdown
var match=env.content.match(linkMd);href=match[2];env.content=match[1]}env.attributes.href=href;// Silently catch any error thrown by decodeURIComponent (#1186)
try{env.content=decodeURIComponent(env.content)}catch(e){}}})})();