{"schema_version":"1.0.0","namespaces":[{"name":"Vaadin","description":"","summary":"","sourceRange":{"file":"src/vaadin-app-layout.html","start":{"line":579,"column":6},"end":{"line":579,"column":56}},"elements":[{"description":"`<vaadin-app-layout>` is a Web Component providing a quick and easy way to get a common application layout structure done.\n\n```\n<vaadin-app-layout primary-section=\"navbar|drawer\">\n <vaadin-drawer-toggle slot=\"navbar [touch-optimized]\"></vaadin-drawer-toggle>\n <h3 slot=\"navbar [touch-optimized]\">Company Name</h3>\n <vaadin-tabs orientation=\"vertical\" slot=\"drawer\">\n   <vaadin-tab>Menu item 1</vaadin-tab>\n </vaadin-tabs>\n <!-- Everything else will be the page content -->\n <div>\n   <h3>Page title</h3>\n   <p>Page content</p>\n </div>\n</vaadin-app-layout>\n```\n\nFor best results, the component should be added to the root level of your application (i.e., as a direct child of `<body>`).\n\nThe page should include a viewport meta tag which contains `viewport-fit=cover`, like the following:\n```\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1, viewport-fit=cover\">\n```\nThis causes the viewport to be scaled to fill the device display.\nTo ensure that important content is displayed, use the provided css variables.\n```\n--safe-area-inset-top\n--safe-area-inset-right\n--safe-area-inset-bottom\n--safe-area-inset-left\n```\n\n### Styling\n\nThe following Shadow DOM parts of the `<vaadin-app-layout>` are available for styling:\n\nPart name     | Description\n--------------|---------------------------------------------------------|\n`navbar`      | Container for the navigation bar\n`drawer`      | Container for the drawer area\n`content`     | Container for page content.\n\nSee [ThemableMixin â€“ how to apply styles for shadow parts](https://github.com/vaadin/vaadin-themable-mixin/wiki)\n\n### Component's slots\n\nThe following slots are available to be set\n\nSlot name          | Description\n-------------------|---------------------------------------------------|\nno name            | Default container for the page content\n`navbar `          | Container for the top navbar area\n`drawer`           | Container for an application menu\n`touch-optimized`  | Container for the bottom navbar area (only visible for mobile devices)\n\n\nSee examples of setting the content into slots in the live demos.\n\n#### Touch optimized\n\nApp Layout has a pseudo-slot `touch-optimized` in order to give more control of the presentation of\nelements with `slot[navbar]`. Internally, when the user is interacting with App Layout from a\ntouchscreen device, the component will search for elements with `slot[navbar touch-optimized]` and move\nthem to the bottom of the page.\n\n### Navigation\n\nAs the drawer opens as an overlay in small devices, it makes sense to close it once a navigation happens.\n\nIn order to do so, there are two options:\n- If the `vaadin-app-layout` instance is available, then `drawerOpened` can be set to `false`\n- If not, a custom event `close-overlay-drawer` can be dispatched either by calling\n `window.dispatchEvent(new CustomEvent('close-overlay-drawer'))` or by calling\n `Vaadin.AppLayoutElement.dispatchCloseOverlayDrawerEvent()`\n\n### Scrolling areas\n\nBy default, the component will act with the \"body scrolling\", so on mobile (iOS Safari and Android Chrome),\nthe toolbars will collapse when a scroll happens.\n\nTo use the \"content scrolling\", in case of the content of the page relies on a pre-defined height (for instance,\nit has a `height:100%`), then the developer can set `height: 100%` to both `html` and `body`.\nThat will make the `[content]` element of app layout scrollable.\nOn this case, the toolbars on mobile device won't collapse.","summary":"","path":"src/vaadin-app-layout.html","properties":[{"name":"primarySection","type":"string | null | undefined","description":"Defines whether navbar or drawer will come first visually.\n- By default (`primary-section=\"navbar\"`), the navbar takes the full available width and moves the drawer down.\n- If `primary-section=\"drawer\"` is set, then the drawer will move the navbar, taking the full available height.","privacy":"public","sourceRange":{"start":{"line":287,"column":12},"end":{"line":293,"column":13}},"metadata":{"polymer":{"notify":true,"observer":"\"_primarySectionObserver\"","attributeType":"String"}},"defaultValue":"\"navbar\""},{"name":"drawerOpened","type":"boolean | null | undefined","description":"Controls whether the drawer is opened (visible) or not.\nIts default value depends on the viewport:\n- `true`, for desktop size views\n- `false`, for mobile size views","privacy":"public","sourceRange":{"start":{"line":301,"column":12},"end":{"line":307,"column":13}},"metadata":{"polymer":{"notify":true,"observer":"\"_drawerOpenedObserver\"","attributeType":"Boolean"}},"defaultValue":"true"},{"name":"overlay","type":"boolean | null | undefined","description":"Drawer is an overlay on top of the content\n Controlled via CSS using `--vaadin-app-layout-drawer-overlay: true|false`;","privacy":"public","sourceRange":{"start":{"line":313,"column":12},"end":{"line":319,"column":13}},"metadata":{"polymer":{"notify":true,"readOnly":true,"attributeType":"Boolean"}},"defaultValue":"false"}],"methods":[{"name":"ready","description":"","privacy":"protected","sourceRange":{"file":"../../vaadin-element-mixin/vaadin-element-mixin.html","start":{"line":48,"column":2},"end":{"line":55,"column":3}},"metadata":{},"params":[],"return":{"type":"void"},"inheritedFrom":"Vaadin.ElementMixin"},{"name":"connectedCallback","description":"","privacy":"private","sourceRange":{"start":{"line":334,"column":8},"end":{"line":365,"column":9}},"metadata":{},"params":[],"return":{"type":"void"}},{"name":"disconnectedCallback","description":"","privacy":"private","sourceRange":{"start":{"line":370,"column":8},"end":{"line":377,"column":9}},"metadata":{},"params":[],"return":{"type":"void"}},{"name":"_primarySectionObserver","description":"","privacy":"protected","sourceRange":{"start":{"line":386,"column":8},"end":{"line":391,"column":9}},"metadata":{},"params":[{"name":"value"}],"return":{"type":"void"}},{"name":"_drawerOpenedObserver","description":"","privacy":"protected","sourceRange":{"start":{"line":393,"column":8},"end":{"line":404,"column":9}},"metadata":{},"params":[],"return":{"type":"void"}},{"name":"_isShadyCSS","description":"","privacy":"protected","sourceRange":{"start":{"line":407,"column":8},"end":{"line":409,"column":9}},"metadata":{},"params":[]},{"name":"_afterFirstRender","description":"","privacy":"protected","sourceRange":{"start":{"line":411,"column":8},"end":{"line":414,"column":9}},"metadata":{},"params":[],"return":{"type":"void"}},{"name":"_drawerToggleClick","description":"","privacy":"protected","sourceRange":{"start":{"line":416,"column":8},"end":{"line":419,"column":9}},"metadata":{},"params":[{"name":"e"}],"return":{"type":"void"}},{"name":"__closeOverlayDrawer","description":"App Layout listens to `close-overlay-drawer` on the window level.\nA custom event can be dispatched and the App Layout will close the drawer in overlay.\n\nThat can be used, for instance, when a navigation occurs when user clicks in a menu item inside the drawer.\n\nSee `dispatchCloseOverlayDrawerEvent()` helper method.","privacy":"private","sourceRange":{"start":{"line":431,"column":8},"end":{"line":435,"column":9}},"metadata":{},"params":[],"return":{"type":"void"}},{"name":"_updateDrawerSize","description":"","privacy":"protected","sourceRange":{"start":{"line":437,"column":8},"end":{"line":447,"column":9}},"metadata":{},"params":[],"return":{"type":"void"}},{"name":"_resize","description":"","privacy":"protected","sourceRange":{"start":{"line":449,"column":8},"end":{"line":453,"column":9}},"metadata":{},"params":[],"return":{"type":"void"}},{"name":"_updateOffsetSize","description":"","privacy":"protected","sourceRange":{"start":{"line":455,"column":8},"end":{"line":485,"column":9}},"metadata":{},"params":[],"return":{"type":"void"}},{"name":"_updateOverlayMode","description":"","privacy":"protected","sourceRange":{"start":{"line":487,"column":8},"end":{"line":514,"column":9}},"metadata":{},"params":[],"return":{"type":"void"}},{"name":"_close","description":"TODO(jouni): what mechanism should we use to close the overlay drawer a navigation is triggered?","privacy":"protected","sourceRange":{"start":{"line":517,"column":8},"end":{"line":519,"column":9}},"metadata":{},"params":[],"return":{"type":"void"}},{"name":"_getCustomPropertyValue","description":"","privacy":"protected","sourceRange":{"start":{"line":521,"column":8},"end":{"line":532,"column":9}},"metadata":{},"params":[{"name":"customProperty"}]},{"name":"_updateTouchOptimizedMode","description":"","privacy":"protected","sourceRange":{"start":{"line":534,"column":8},"end":{"line":561,"column":9}},"metadata":{},"params":[],"return":{"type":"void"}},{"name":"_blockAnimationUntilAfterNextRender","description":"","privacy":"protected","sourceRange":{"start":{"line":563,"column":8},"end":{"line":571,"column":9}},"metadata":{},"params":[],"return":{"type":"void"}}],"staticMethods":[{"name":"_finalizeClass","description":"","privacy":"protected","sourceRange":{"file":"../../vaadin-element-mixin/vaadin-element-mixin.html","start":{"line":31,"column":2},"end":{"line":47,"column":3}},"metadata":{},"params":[],"return":{"type":"void"},"inheritedFrom":"Vaadin.ElementMixin"},{"name":"finalize","description":"","privacy":"protected","sourceRange":{"file":"../../vaadin-themable-mixin/vaadin-themable-mixin.html","start":{"line":16,"column":4},"end":{"line":31,"column":5}},"metadata":{},"params":[],"return":{"type":"void"},"inheritedFrom":"Vaadin.ThemableMixin"},{"name":"_includeMatchingThemes","description":"","privacy":"protected","sourceRange":{"file":"../../vaadin-themable-mixin/vaadin-themable-mixin.html","start":{"line":34,"column":4},"end":{"line":79,"column":5}},"metadata":{},"params":[{"name":"template"}],"return":{"type":"void"},"inheritedFrom":"Vaadin.ThemableMixin"},{"name":"_includeStyle","description":"","privacy":"private","sourceRange":{"file":"../../vaadin-themable-mixin/vaadin-themable-mixin.html","start":{"line":82,"column":4},"end":{"line":88,"column":5}},"metadata":{},"params":[{"name":"moduleName"},{"name":"template"}],"return":{"type":"void"},"inheritedFrom":"Vaadin.ThemableMixin"},{"name":"dispatchCloseOverlayDrawerEvent","description":"Helper static method that dispatches a `close-overlay-drawer` event","privacy":"public","sourceRange":{"start":{"line":382,"column":8},"end":{"line":384,"column":9}},"metadata":{},"params":[],"return":{"type":"void"}}],"demos":[{"url":"demo/index.html","description":""}],"metadata":{},"sourceRange":{"start":{"line":271,"column":6},"end":{"line":572,"column":7}},"privacy":"public","superclass":"HTMLElement","name":"Vaadin.AppLayoutElement","attributes":[{"name":"primary-section","description":"Defines whether navbar or drawer will come first visually.\n- By default (`primary-section=\"navbar\"`), the navbar takes the full available width and moves the drawer down.\n- If `primary-section=\"drawer\"` is set, then the drawer will move the navbar, taking the full available height.","sourceRange":{"start":{"line":287,"column":12},"end":{"line":293,"column":13}},"metadata":{},"type":"string | null | undefined"},{"name":"drawer-opened","description":"Controls whether the drawer is opened (visible) or not.\nIts default value depends on the viewport:\n- `true`, for desktop size views\n- `false`, for mobile size views","sourceRange":{"start":{"line":301,"column":12},"end":{"line":307,"column":13}},"metadata":{},"type":"boolean | null | undefined"},{"name":"overlay","description":"Drawer is an overlay on top of the content\n Controlled via CSS using `--vaadin-app-layout-drawer-overlay: true|false`;","sourceRange":{"start":{"line":313,"column":12},"end":{"line":319,"column":13}},"metadata":{},"type":"boolean | null | undefined"}],"events":[{"type":"CustomEvent","name":"close-overlay-drawer","description":"App Layout listens to `close-overlay-drawer` on the window level.\nA custom event can be dispatched and the App Layout will close the drawer in overlay.\n\nThat can be used, for instance, when a navigation occurs when user clicks in a menu item inside the drawer.\n\nSee `dispatchCloseOverlayDrawerEvent()` helper method.","metadata":{}},{"type":"CustomEvent","name":"primary-section-changed","description":"Fired when the `primarySection` property changes.","metadata":{}},{"type":"CustomEvent","name":"drawer-opened-changed","description":"Fired when the `drawerOpened` property changes.","metadata":{}},{"type":"CustomEvent","name":"overlay-changed","description":"Fired when the `overlay` property changes.","metadata":{}}],"styling":{"cssVariables":[],"selectors":[]},"slots":[{"description":"","name":"navbar","range":{"start":{"line":164,"column":6},"end":{"line":164,"column":33}}},{"description":"","name":"drawer","range":{"start":{"line":168,"column":6},"end":{"line":168,"column":49}}},{"description":"","name":"","range":{"start":{"line":171,"column":6},"end":{"line":171,"column":19}}},{"description":"","name":"navbar-bottom","range":{"start":{"line":174,"column":6},"end":{"line":174,"column":40}}}],"tagname":"vaadin-app-layout","mixins":["Vaadin.ElementMixin","Vaadin.ThemableMixin"]}]}]}